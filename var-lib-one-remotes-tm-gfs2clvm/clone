#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2002-2012, OpenNebula Project Leads (OpenNebula.org)             #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

###############################################################################
# Prepare Environment
###############################################################################

SRC=$1
DST=$2
SIZE=$3

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
    LVMRC=/etc/one/tm/gfs2clvmrc
else
    TMCOMMON=$ONE_LOCATION/remotes/tm/tm_common.sh
    LVMRC=$ONE_LOCATION/etc/tm/gfs2clvmrc
fi

. $TMCOMMON
. $LVMRC

## Include file with VG_NAME definition
source /etc/one/tm/gfs2clvmrc

SRC_PATH=`arg_path $SRC`
DST_PATH=`arg_path $DST`

SRC_HOST=`arg_host $SRC`
DST_HOST=`arg_host $DST`

SRC_BASENAME=$( basename "$SRC" )

if [ -z $SIZE ] ; then
    src_volume=lv-oneimg-${SRC_BASENAME}
    hostname=$DST_HOST
    src_volume_size=$(set -x ; ssh $hostname sudo /sbin/lvs --noheadings --units m | grep $src_volume 2>/dev/null | ( read lv vg states size ; echo $size) )
    SIZE=${src_volume_size/M/}
    log "size: $SIZE"
fi

if [ -z $SIZE ] ; then
    SIZE=$DEFAULT_LV_SIZE
fi

log "$1 $2"
log "DST: $DST_PATH"

DST_DIR=`dirname $DST_PATH`

log "Creating directory $DST_DIR"
exec_and_log "$SSH $DST_HOST mkdir -p $DST_DIR"


###############################################################################
# Determine Volume Group/LV names by Datastore ID/Name
###############################################################################

VID=$(echo $DST_PATH | cut -f7 -d"/")
DSID=$(echo ${SRC} | cut -f6 -d"/")
VG_NAME=$(onedatastore show ${DSID} | grep NAME | awk '{print $3}')
DSTHASH=$(echo -n $DST_PATH | md5sum | awk '{print $1}')
LV_NAME=lv-one-$VID-$DSTHASH


case $SRC in

###############################################################################
# Get the image from HTTP repository and dump to a new LV
###############################################################################

http://*)
    log "Creating LV $LV_NAME"
    exec_and_log "$SSH $DST_HOST test -e /dev/$VG_NAME/$LV_NAME && $SUDO $LVREMOVE -f $VG_NAME/$LV_NAME || echo 'Not Found'"
    exec_and_log "$SSH $DST_HOST $SUDO $LVCREATE -L$SIZE -n $LV_NAME $VG_NAME"
    exec_and_log "$SSH $DST_HOST test -e $DST_PATH && rm -rf $DST_PATH || echo 'No Link Exists'"
    exec_and_log "$SSH $DST_HOST ln -s /dev/$VG_NAME/$LV_NAME $DST_PATH"
    log "Dumping Image into /dev/$VG_NAME/$LV_NAME"
    exec_and_log "eval $SSH $DST_HOST '$WGET $SRC -q -O- | $DD of=/dev/$VG_NAME/$LV_NAME bs=32M'"
    ;;


###############################################################################
# Create a snapshot from the given device (already on DST_HOST)
###############################################################################

*:/dev/*)
    log "Cloning LV $LV_NAME"
    exec_and_log "$SSH $DST_HOST test -e /dev/$VG_NAME/$LV_NAME && $SUDO $LVREMOVE -f $VG_NAME/$LV_NAME || echo 'Not Found'"
    exec_and_log "$SSH $DST_HOST $SUDO $LVCREATE -s -L$SIZE -n $LV_NAME $SRC_PATH"
    exec_and_log "$SSH $DST_HOST test -e $DST_PATH && rm -rf $DST_PATH || echo 'No Link Exists'"
    exec_and_log "$SSH $DST_HOST ln -s /dev/$VG_NAME/$LV_NAME $DST_PATH"
    exec_and_log "$SSH $DST_HOST chown oneadmin: $DST_PATH"
    ;;


###############################################################################
# Retrieve the image from SRC_HOST and dump it to a new LV
###############################################################################

*)
    log "Creating LV $LV_NAME"
    exec_and_log "$SSH $DST_HOST test -e /dev/$VG_NAME/$LV_NAME && $SUDO $LVREMOVE -f $VG_NAME/$LV_NAME || echo 'Not Found'"
    exec_and_log "$SSH $DST_HOST $SUDO $LVCREATE -L${SIZE}M -n $LV_NAME $VG_NAME"
    exec_and_log "$SSH $DST_HOST test -e $DST_PATH && rm -rf $DST_PATH || echo 'No Link Exists'"
    exec_and_log "$SSH $DST_HOST ln -s /dev/$VG_NAME/$LV_NAME $DST_PATH"

    log "Dumping Image"
    exec_and_log "eval $SSH $DST_HOST $DD if=/dev/mapper/${VG_NAME}-lv--oneimg--${SRC_BASENAME} of=/dev/$VG_NAME/$LV_NAME bs=32M"
    ;;
esac
